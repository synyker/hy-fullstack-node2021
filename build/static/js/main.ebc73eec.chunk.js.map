{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","put","id","delete","FilterForm","props","handler","onChange","AddPersonForm","nameChangeHandler","numberChangeHandler","submitHandler","onSubmit","type","Persons","persons","deleteHandler","map","person","name","Person","number","onClick","Notification","message","class","App","useState","setPersons","newName","setNewName","newPhonenumber","setNewPhonenumber","filter","setFilter","error","setError","success","setSuccess","useEffect","console","log","personService","then","response","data","length","personsToShow","toLowerCase","includes","createPerson","concat","setTimeout","catch","updatePerson","newPerson","event","target","value","preventDefault","found","findIndex","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebc73eec.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/persons\"\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n};\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject);\n};\n\nconst update = (newObject) => {\n  return axios.put(`${baseUrl}/${newObject.id}`, newObject);\n};\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { \n  getAll: getAll, \n  create: create, \n  update: update,\n  remove: remove,\n}\n","import React, { useEffect, useState } from \"react\";\nimport personService from \"./services/persons\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newPhonenumber, setNewPhonenumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null)\n\n  useEffect(() => {\n    console.log(\"effect\");\n    personService\n      .getAll()\n      .then((response) => {\n        setPersons(response.data);\n      })\n  }, []);\n  console.log(\"render\", persons.length);\n  const personsToShow =\n    filter.length === 0\n      ? persons\n      : persons.filter((person) => {\n          return person.name.toLowerCase().includes(filter.toLowerCase());\n        });\n\n  const handleNewNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNewPhonenumberChange = (event) => {\n    setNewPhonenumber(event.target.value);\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const found = persons.findIndex((person) => person.name === newName);\n    if (found < 0) {\n      createPerson({ name: newName, number: newPhonenumber });\n    } else {\n      const { id, name } = persons[found];\n      updatePerson({\n        id: id,\n        name: name,\n        number: newPhonenumber,\n      });\n    }\n  };\n\n  const createPerson = (person) => {\n    personService\n      .create(person)\n      .then((response) => {\n        setPersons(persons.concat(response.data));\n        setSuccess(`Added person ${person.name}`)\n        setTimeout(() => { setSuccess(null)}, 5000)\n      })\n      .catch(error => {\n        setError(error.response.data.message)\n      });\n  };\n\n  const updatePerson = (newPerson) => {\n    personService\n      .update(newPerson)\n      .then((response) => {\n        setPersons(\n          persons.map((person) => (person.id !== newPerson.id ? person : response.data))\n        );\n        setSuccess(`Updated person ${newPerson.name}`)\n        setTimeout(() => { setSuccess(null)}, 5000)\n      })\n      .catch(error => {\n        setError(`failed to update person ${newPerson.name}`)\n        setTimeout(() => { setError(null)}, 5000)\n      });\n  };\n\n  const deletePerson = (personToDelete) => {\n    const handler = () => {\n      console.log(personToDelete.id);\n      personService\n        .remove(personToDelete.id)\n        .then((response) => {\n          setPersons(\n            persons.filter((person) => {\n              return person.id !== personToDelete.id;\n            })\n          );\n          setSuccess(`Deleted person ${personToDelete.name}`)\n          setTimeout(() => { setSuccess(null)}, 5000)\n        })\n        .catch(error => {\n          setError(`failed to delete person ${personToDelete.name}`)\n          setTimeout(() => { setError(null)}, 5000)\n        });\n    };\n    return handler;\n  };\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={error} type={\"error\"} />\n      <Notification message={success} type={\"success\"} />\n      <FilterForm handler={handleFilterChange} />\n      <AddPersonForm\n        nameChangeHandler={handleNewNameChange}\n        numberChangeHandler={handleNewPhonenumberChange}\n        submitHandler={addPerson}\n      />\n      <Persons persons={personsToShow} deleteHandler={deletePerson} />\n    </div>\n  );\n};\n\nconst FilterForm = (props) => {\n  const { handler } = props;\n  return (\n    <div>\n      filter shown with <input onChange={handler} />\n    </div>\n  );\n};\n\nconst AddPersonForm = (props) => {\n  const { nameChangeHandler, numberChangeHandler, submitHandler } = props;\n  return (\n    <div>\n      <h2>add new</h2>\n      <form onSubmit={submitHandler}>\n        <div>\n          name: <input onChange={nameChangeHandler} />\n          number: <input onChange={numberChangeHandler} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst Persons = (props) => {\n  const { persons, deleteHandler } = props;\n  return (\n    <div>\n      <h2>Numbers</h2>\n      {persons &&\n        persons.map((person) => (\n          <Person\n            key={person.name}\n            person={person}\n            deleteHandler={deleteHandler}\n          />\n        ))}\n    </div>\n  );\n};\n\nconst Person = (props) => {\n  const { person, deleteHandler } = props;\n  return (\n    <div>\n      <span>\n        {person.name} {person.number}\n      </span>\n      <button onClick={deleteHandler(person)}>delete</button>\n    </div>\n  );\n};\n\nconst Notification = ({ message, type }) => {\n  if (message === null) return null;\n\n  return (\n    <div class={type}>\n      {message}\n    </div>\n  )\n};\n\nexport default App;\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport \"./index.css\"\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n"],"sourceRoot":""}